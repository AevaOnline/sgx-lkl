#!/bin/sh

set -e
#set -x

KEY_LENGTH=3072
KEY_LENGTH_HEX=768

usage() {  
  echo "Usage: $0 path-to-new-key-file"  
  exit 1  
} 

pad() {
  text=$1
  length=$2
  while [ ${#text} -lt ${length} ]; do
    text="0"${text}
  done
  echo ${text}
}

get_key_component() {
  key=$1
  comp=$2

  openssl rsa -in ${key} -noout -text | sed 's/^\([a-z].*\)/\f\1/' | awk 'BEGIN { RS="\f" } /'"${comp}"':/ { print toupper($0)}' | tail -n +2 | tr -d '[:space:]:'| sed 's/^0*//'
}

if [ $# -ne 1 ] ; then
  usage
  exit 1
fi

key_file=$1
key_file_tmp=${key_file}.tmp

echo "Generating ${KEY_LENGTH}-bit RSA key ${key_file_tmp}..."
openssl genrsa -3 -out ${key_file_tmp} ${KEY_LENGTH}

echo "\nGenerating enclave key file ${key_file}..."

PUB_MODULUS=$( pad $( get_key_component ${key_file_tmp} "modulus" ) ${KEY_LENGTH_HEX} )
PUB_EXPONENT=$( pad "3" ${KEY_LENGTH_HEX} )
PRIV_EXPONENT=$( pad $( get_key_component ${key_file_tmp} "privateExponent" ) ${KEY_LENGTH_HEX} )
PRIME1=$( pad $( get_key_component ${key_file_tmp} "prime1" ) ${KEY_LENGTH_HEX} )
PRIME2=$( pad $( get_key_component ${key_file_tmp} "prime2" ) ${KEY_LENGTH_HEX} )

echo "#Generated by sgx-lkl/tools/gen_enclave_debug_key.sh" > ${key_file}
echo "PUBKEY: ${PUB_MODULUS}" >> ${key_file}
echo "SECKEY: ${PRIV_EXPONENT}" >> ${key_file}
echo "P: ${PRIME1}" >> ${key_file}
echo "Q: ${PRIME2}" >> ${key_file}
echo "E: ${PUB_EXPONENT}" >> ${key_file}

echo "Deleting temporary key file ${key_file_tmp}..."
rm ${key_file_tmp}

echo "Done."
